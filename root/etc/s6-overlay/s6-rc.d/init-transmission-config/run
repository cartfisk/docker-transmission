#!/usr/bin/with-contenv bash
# shellcheck shell=bash

SETTINGS=/config/settings.json

# copy config
if [[ ! -f $SETTINGS ]]; then
    cp /defaults/settings.json $SETTINGS
fi

# Default values
DOWNLOAD_DIR="/downloads/complete"
INCOMPLETE_DIR="/downloads/incomplete"

# Check `settings.json` for custom download/incomplete directories
settings_download_dir=$(grep -o '"download-dir": "[^"]*' "$SETTINGS" | sed 's/"download-dir": "//')
if [ ! -z "$settings_download_dir" ]; then
    DOWNLOAD_DIR="$settings_download_dir"
fi
settings_incomplete_dir=$(grep -o '"incomplete-dir": "[^"]*' "$SETTINGS" | sed 's/"incomplete-dir": "//')
if [ ! -z "$settings_incomplete_dir" ]; then
    INCOMPLETE_DIR="$settings_incomplete_dir"
fi

# make folders
mkdir -p $DOWNLOAD_DIR
mkdir -p $INCOMPLETE_DIR
mkdir -p /watch

if [[ -n "$USER" ]] && [[ -n "$PASS" ]]; then
    sed -i '/rpc-authentication-required/c\    "rpc-authentication-required": true,' /config/settings.json
    sed -i "/rpc-username/c\    \"rpc-username\": \"$USER\"," /config/settings.json
    sed -i "/rpc-password/c\    \"rpc-password\": \"$PASS\"," /config/settings.json
else
    sed -i '/rpc-authentication-required/c\    "rpc-authentication-required": false,' /config/settings.json
    sed -i "/rpc-username/c\    \"rpc-username\": \"$USER\"," /config/settings.json
    sed -i "/rpc-password/c\    \"rpc-password\": \"$PASS\"," /config/settings.json
fi

if [[ -n "$WHITELIST" ]]; then
    sed -i '/rpc-whitelist-enabled/c\    "rpc-whitelist-enabled": true,' /config/settings.json
    sed -i "/\"rpc-whitelist\"/c\    \"rpc-whitelist\": \"$WHITELIST\"," /config/settings.json
else
    sed -i '/rpc-whitelist-enabled/c\    "rpc-whitelist-enabled": false,' /config/settings.json
    sed -i "/\"rpc-whitelist\"/c\    \"rpc-whitelist\": \"$WHITELIST\"," /config/settings.json
fi

if [[ -n "$HOST_WHITELIST" ]]; then
    sed -i '/rpc-host-whitelist-enabled/c\    "rpc-host-whitelist-enabled": true,' /config/settings.json
    sed -i "/\"rpc-host-whitelist\"/c\    \"rpc-host-whitelist\": \"$HOST_WHITELIST\"," /config/settings.json
else
    sed -i '/rpc-host-whitelist-enabled/c\    "rpc-host-whitelist-enabled": false,' /config/settings.json
    sed -i "/\"rpc-host-whitelist\"/c\    \"rpc-host-whitelist\": \"$HOST_WHITELIST\"," /config/settings.json
fi

if [[ -n "${PEERPORT}" ]]; then
    sed -i "/\"peer-port\"/c\    \"peer-port\": ${PEERPORT}," /config/settings.json
    sed -i '/peer-port-random-on-start/c\     "peer-port-random-on-start": false,' /config/settings.json
fi

# Handle old theme locations
mkdir -p {/transmissionic,/combustion-release,/flood-for-transmission,/kettu,/transmission-web-control}
echo /transmissionic /combustion-release /flood-for-transmission /kettu /transmission-web-control | xargs -n1 ln -s /defaults/index.html

# permissions
lsiown abc:abc \
    /config/settings.json

if [[ -d /downloads && "$(stat -c '%U' /downloads)" != "abc" ]]; then
    lsiown abc:abc /downloads
fi

if [[ "$(stat -c '%U' $DOWNLOAD_DIR)" != "abc" ]]; then
    lsiown abc:abc $DOWNLOAD_DIR
fi

if [[ "$(stat -c '%U' $INCOMPLETE_DIR)" != "abc" ]]; then
    lsiown abc:abc $INCOMPLETE_DIR
fi

if [[ "$(stat -c '%U' /watch)" != "abc" ]]; then
    lsiown abc:abc /watch
fi
